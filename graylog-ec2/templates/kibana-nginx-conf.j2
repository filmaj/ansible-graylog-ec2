worker_processes  1;
daemon off;

events {
    worker_connections  1024;
}

http {
    include       {{  nginx_conf_dir }}/mime.types;
    default_type  application/octet-stream;
    log_format    graylog_format  'nginx: $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" <msec=$msec|connection=$connection|connection_requests=$connection_requests|millis=$request_time>';
    access_log    /dev/stdout graylog_format;

    server {
      listen 80;
      return 301 https://$host:443$request_uri;
      error_page 502 /502.html;
      location  /502.html {
        internal;
      }
    }

    server {
      listen 443;

      ssl on;
      ssl_certificate {{ nginx_conf_dir }}/ca/graylog.crt;
      ssl_certificate_key {{ nginx_conf_dir }}/ca/graylog.key;
      ssl_session_timeout 5m;
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;
      ssl_prefer_server_ciphers on;

      location / {
        proxy_pass http://localhost:9000/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Graylog-Server-URL https://{{ inventory_hostname }}/api/;
        proxy_pass_request_headers on;
        proxy_connect_timeout 150;
        proxy_send_timeout 100;
        proxy_read_timeout 100;
        proxy_buffers 4 32k;
        client_max_body_size 8m;
        client_body_buffer_size 128k;
      }

      location /gelfmunger {
        content_by_lua '
        ngx.req.read_body()
        local body = ngx.req.get_body_data()
        local realip = ngx.req.get_headers()["X-Forwarded-For"]
        local append = [[,"ip":"]] .. realip .. [["}]]
        local closingbraceindex = string.find(body, "}", -1)
        local newbody = string.sub(body, 1, closingbraceindex-1) .. append
        res = ngx.location.capture("/gelfproxypass", {method = ngx.HTTP_POST, body = newbody})
        ngx.print(res.body)
        ';
      }

      location /gelf {
        proxy_pass https://metrics.phonegap.com/gelfmunger;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass_request_headers on;
        proxy_connect_timeout 150;
        proxy_send_timeout 100;
        proxy_read_timeout 100;
        proxy_buffers 4 32k;
      }
      location /gelfproxypass {
        proxy_pass http://localhost:12201/gelf;
      }

      location /api/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_pass http://localhost:9000/api/;
      }

      location /viz/ {
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_pass          http://localhost:5601/;
        proxy_read_timeout  90;
        proxy_redirect      http://localhost:5601/ https://{{ inventory_hostname }}/{{ kibana_subpath }}/;
        auth_basic "Restricted Content";
        auth_basic_user_file {{ passwdfile }};
      }

      error_page 502 /502.html;
      location  /502.html {
        internal;
      }
    }
}
